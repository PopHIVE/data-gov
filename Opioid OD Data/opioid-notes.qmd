---
title: "Notes on Opiods Dataset"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(scales)
library(plotly)

data_url <- "https://raw.githubusercontent.com/ysph-dsde/data-gov/refs/heads/main/Opioid%20OD%20Data/Harmonized%20Opioid%20Overdose%20Datasets_01.23.2025.csv"

df <- read_csv(data_url) |>
  clean_names() |> 
  filter(!(count %in% c(7777, 8888, 9999))) |> 
  filter(!(crude_rate %in% c(7777, 8888, 9999))) |> 
  filter(!(age_adjusted_rate %in% c(7777, 8888, 9999))) |> 
  # Filter out rows without Quarter
  filter(!is.na(quarter)) |> 
  mutate(year_quarter = paste(year, quarter))
```

Dan's code
```{r}
p1 <- df %>%
  dplyr::filter(drug=='All Opioids' & characteristic=='Age' & dataset=='AHRQ' & state == input$state.select ) %>%
  group_by(qdate, level) %>%
  summarize(count=sum(count)) %>% #combine outpatient nad inpatient
  ggplot(aes(x=qdate, y=count, group=level, color=level)) +
  theme_minimal() +
  geom_line()
ggplotly(p1)
```


Find the number of rows in the data for each drug
```{r}
df |> count(drug, sort = TRUE)
```
All Opioids has the most number of rows, 64218 rows.


Find the number of rows in the data for each underlying_cause_of_death
```{r}
df |> count(underlying_cause_of_death, sort = TRUE)
```
'All' has the most number of rows, 176759 rows. 'Unintentional' is a close second at 156100 rows.


Find the number of rows in the data for each setting
```{r}
df |> count(setting, sort = TRUE)
```
`All` has the most number of rows, at 142292. `Medical Facility - Outpatient or ER` and `Medical Facility - Inpatient` is a close second.

Find states
```{r}
df |> count(state, sort = TRUE)
```



Observe datasets other than AHRQ and CDC WONDER
```{r}
df |> 
  filter(dataset != "AHRQ") |>
  filter(!is.na(count), count > 0,
         characteristic == "Age")
```
0 rows!



Plot
```{r}
p1 <- df %>%
  filter(drug=='All Opioids' & 
         characteristic=='Age' &
         state == "Texas") %>%
  group_by(dataset, state, year_quarter, level) %>%
  summarize(count=sum(count, na.rm = TRUE)) %>%
  ungroup() %>%
  filter(count > 0) %>%
  ggplot(aes(x = year_quarter, y = count, 
             group = level, color = level,
             text = paste0("Quarter: ", year_quarter, "\n",
                           "Count: ", count))) +
  geom_line() +
  labs(x = NULL,
       y = "Count",
       color = "Age Category") +
  scale_x_discrete(breaks = c("2016 Q1", "2017 Q1", "2018 Q1",
                              "2019 Q1", "2020 Q1", "2021 Q1", 
                              "2022 Q1")) +
  scale_y_continuous(labels = scales::comma) +
  facet_wrap(~dataset) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
  

ggplotly(p1, tooltip = c("text"))
```

