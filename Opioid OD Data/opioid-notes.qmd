---
title: "Notes on Opiods Dataset"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(janitor)
library(scales)
library(plotly)

data_url <- "https://raw.githubusercontent.com/ysph-dsde/data-gov/refs/heads/main/Opioid%20OD%20Data/Harmonized%20Opioid%20Overdose%20Datasets_01.23.2025.csv"

df <- read_csv(data_url) |>
  clean_names() |> 
  filter(!(count %in% c(7777, 8888, 9999))) |> 
  filter(!(crude_rate %in% c(7777, 8888, 9999))) |> 
  filter(!(age_adjusted_rate %in% c(7777, 8888, 9999))) |> 
  # Filter out rows without Quarter
  filter(!is.na(quarter)) |> 
  mutate(year_quarter = paste(year, quarter))
```

Dan's code

```{r}
p1 <- df %>%
  dplyr::filter(drug=='All Opioids' & characteristic=='Age' & dataset=='AHRQ' & state == input$state.select ) %>%
  group_by(qdate, level) %>%
  summarize(count=sum(count)) %>% #combine outpatient nad inpatient
  ggplot(aes(x=qdate, y=count, group=level, color=level)) +
  theme_minimal() +
  geom_line()
ggplotly(p1)
```

Find the number of rows in the data for each drug

```{r}
df |> count(drug, sort = TRUE)
```

All Opioids has the most number of rows, 64218 rows.

Find the number of rows in the data for each underlying_cause_of_death

```{r}
df |> count(underlying_cause_of_death, sort = TRUE)
```

'All' has the most number of rows, 176759 rows. 'Unintentional' is a close second at 156100 rows.

Find the number of rows in the data for each setting

```{r}
df |> count(setting, sort = TRUE)
```

`All` has the most number of rows, at 142292. `Medical Facility - Outpatient or ER` and `Medical Facility - Inpatient` is a close second.

Find states

```{r}
df |> count(state, sort = TRUE)
```

Observe datasets other than AHRQ and CDC WONDER

```{r}
df |> 
  filter(dataset != "AHRQ") |>
  filter(!is.na(count), count > 0,
         characteristic == "Age")
```

0 rows!

Plot

```{r}
p1 <- df %>%
  filter(drug=='All Opioids' & 
           characteristic=='Age' &
           state == "Texas") %>%
  group_by(dataset, state, year_quarter, level) %>%
  summarize(count=sum(count, na.rm = TRUE)) %>%
  ungroup() %>%
  filter(count > 0) %>%
  ggplot(aes(x = year_quarter, y = count, 
             group = level, color = level,
             text = paste0("Quarter: ", year_quarter, "\n",
                           "Count: ", count))) +
  geom_line() +
  labs(x = NULL,
       y = "Count",
       color = "Age Category") +
  scale_x_discrete(breaks = c("2016 Q1", "2017 Q1", "2018 Q1",
                              "2019 Q1", "2020 Q1", "2021 Q1", 
                              "2022 Q1")) +
  scale_y_continuous(labels = scales::comma) +
  facet_wrap(~dataset) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


ggplotly(p1, tooltip = c("text"))
```

Plot By Sex

```{r}
df %>%
  filter(drug=='All Opioids' & 
           characteristic=='Sex' &
           state == "US") %>%
  group_by(dataset, state, year_quarter, level) %>%
  summarize(count=sum(count, na.rm = TRUE)) %>%
  ungroup() %>%
  filter(count > 0) %>%
  ggplot(aes(x = year_quarter, y = count, 
             group = level, color = level,
             text = paste0("Quarter: ", year_quarter, "\n",
                           "Count: ", count))) +
  geom_line() +
  scale_x_discrete(breaks = c("2016 Q1", "2017 Q1", "2018 Q1",
                              "2019 Q1", "2020 Q1", "2021 Q1", 
                              "2022 Q1")) +
  facet_wrap(~dataset) +
  theme_minimal()
```


```{r}
df %>%
  filter(drug=='All Opioids' & 
           characteristic=='Age' &
           state == "Connecticut") |> 
  group_by(dataset, state, year_quarter, level) %>%
  summarize(count=sum(count, na.rm = TRUE)) |>
  ungroup() |> 
  pivot_wider(names_from = level, values_from = count) |> 
  mutate(Overall = `25-44 Years` + `45-64 Years` + `65+ Years` + `<24 Years`) |> 
  pivot_longer(
    cols = where(is.numeric),
    names_to = "level",
    values_to = "count"
  ) |> 
  mutate(level = factor(level),
         level = fct_relevel(level, c("Overall", "65+ Years",
                                      "45-64 Years", "25-44 Years",
                                      "<24 Years")))
```



```{r}
# Interactive
data_url <- "https://raw.githubusercontent.com/ysph-dsde/data-gov/refs/heads/main/Opioid%20OD%20Data/Harmonized%20Opioid%20Overdose%20Datasets_01.23.2025.csv"

# Static
opioid_od <- read_csv(data_url) %>%
  as.data.frame()

"%!in%" <- function(x,y)!("%in%"(x,y))
```


```{r}
# Counts in AHRQ dataset.
ahrq_map_plot <- opioid_od %>%
  # Filter the placeholder numerical values.
  filter(Count %!in% 7777 & Count %!in% 8888 & Count %!in% 9999) %>%
  
  # Switch between the two settings, and change the subtitle name.
  filter(Setting %in% "Medical Facility - Inpatient") %>%
  #filter(Setting %in% "Medical Facility - Outpatient or ER") %>%
  
  # Filter the metadata settings.
  filter(Dataset %in% "AHRQ", State %in% datasets::state.name, 
         Year %in% 2022, Quarter %in% NA,
         `Underlying Cause of Death` %in% "All", Drug %in% "All Opioids",
         Characteristic %in% "Not Stratified", Level %in% "N/A") %>%
  
  # plot_usmap() requires specific nomenclature for the column with states.
  rename(state = State) %>%
  
  # Plot settings and features.
  plot_usmap(data = ., values = "Count", color = "red") + 
  scale_fill_continuous(
    low = "white", high = "red", name = "Count (2022)", label = scales::comma
  ) + 
  labs(title = "AHRQ") +
  theme(legend.position = "",
        plot.title = element_text(size = 18, face = "bold"),  # Increase title size
        axis.ticks = element_blank(),  # Remove ticks
        axis.text = element_blank(),    # Remove tick labels
        legend.text = element_text(size = 12),               # Adjust legend text
        legend.title = element_text(size = 14))



# Counts in CDC WONDER dataset.
wonder_map_plot <- opioid_od %>%
  # Filter the placeholder numerical values.
  filter(Count %!in% 7777 & Count %!in% 8888 & Count %!in% 9999) %>%
  
  # Switch between the two settings, and change the subtitle name.
  filter(Setting %in% "Medical Facility - Inpatient") %>%
  #filter(Setting %in% "Medical Facility - Outpatient or ER") %>%
  
  # Filter the metadata settings.
  filter(Dataset %in% "CDC WONDER", State %in% datasets::state.name, 
         Year %in% 2022, Quarter %in% NA,
         `Underlying Cause of Death` %in% "All", Drug %in% "All Opioids",
         Characteristic %in% "Not Stratified", Level %in% "N/A") %>%
  
  # plot_usmap() requires specific nomenclature for the column with states.
  rename(state = State) %>%
  
  # Plot settings and features.
  plot_usmap(data = ., values = "Count", color = "red") + 
  scale_fill_continuous(
    low = "white", high = "red", name = "Count (2022)", label = scales::comma
  ) + 
  labs(title = "CDC WONDER") +
  theme(legend.position = "right",
        plot.title = element_text(size = 18, face = "bold"),  # Increase title size
        axis.ticks = element_blank(),  # Remove ticks
        axis.text = element_blank(),               # Adjust axis text
        legend.text = element_text(size = 14),               # Adjust legend text
        legend.title = element_text(size = 16))
```


